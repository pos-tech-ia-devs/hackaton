# app.py
import streamlit as st
import os
import google.generativeai as genai
from PIL import Image
from dotenv import load_dotenv

# Carrega as vari√°veis de ambiente do arquivo .env
load_dotenv()

# --- Configura√ß√£o do Gemini e Prompt (mesmo de antes) ---

# O prompt que instrui o modelo
PROMPT_TEMPLATE = """
Voc√™ √© um especialista em seguran√ßa da informa√ß√£o e arquiteto de solu√ß√µes, especializado em modelagem de amea√ßas (Threat Modeling).

Sua tarefa √© analisar a imagem de uma arquitetura de sistemas que fornecerei. Voc√™ deve identificar os componentes, os fluxos de dados, os limites de confian√ßa (trust boundaries) e, em seguida, realizar uma an√°lise de amea√ßas completa usando a metodologia STRIDE.

Para cada categoria do STRIDE, identifique amea√ßas potenciais, explique por que s√£o uma amea√ßa nesta arquitetura espec√≠fica e sugira uma ou mais mitiga√ß√µes.

Apresente o resultado em formato Markdown, seguindo estritamente esta estrutura:

# Relat√≥rio de An√°lise de Amea√ßas - Metodologia STRIDE

## An√°lise da Arquitetura
(Descreva brevemente os componentes e fluxos que voc√™ identificou na imagem.)

---

## An√°lise STRIDE

### S - Spoofing (Falsifica√ß√£o de Identidade)
*   **Amea√ßa:** (Descreva a amea√ßa de falsifica√ß√£o)
*   **Componentes Afetados:** (Liste os componentes)
*   **Explica√ß√£o:** (Detalhe como a amea√ßa pode ocorrer)
*   **Mitiga√ß√£o Sugerida:** (Sugira solu√ß√µes como autentica√ß√£o forte, mTLS, verifica√ß√£o de certificados, etc.)
*   **Referencias:** (Inclua links para documenta√ß√£o ou melhores pr√°ticas, se poss√≠vel)

### T - Tampering (Adultera√ß√£o de Dados)
*   **Amea√ßa:** (Descreva a amea√ßa de adultera√ß√£o)
*   **Componentes Afetados:** (Liste os fluxos de dados, bancos de dados, etc.)
*   **Explica√ß√£o:** (Detalhe como os dados podem ser alterados em tr√¢nsito ou em repouso)
*   **Mitiga√ß√£o Sugerida:** (Sugira solu√ß√µes como HTTPS/TLS, assinaturas digitais, checksums, controle de integridade de arquivos, etc.)
*   **Referencias:** (Inclua links para documenta√ß√£o ou melhores pr√°ticas, se poss√≠vel)

### R - Repudiation (Rep√∫dio)
*   **Amea√ßa:** (Descreva a amea√ßa de rep√∫dio)
*   **Componentes Afetados:** (Liste os componentes respons√°veis por a√ß√µes cr√≠ticas)
*   **Explica√ß√£o:** (Detalhe como um ator poderia negar ter realizado uma a√ß√£o)
*   **Mitiga√ß√£o Sugerida:** (Sugira solu√ß√µes como logs de auditoria detalhados e seguros, assinaturas digitais, etc.)
*   **Referencias:** (Inclua links para documenta√ß√£o ou melhores pr√°ticas, se poss√≠vel)

### I - Information Disclosure (Divulga√ß√£o de Informa√ß√£o)
*   **Amea√ßa:** (Descreva a amea√ßa de vazamento de dados)
*   **Componentes Afetados:** (Liste componentes que armazenam ou transmitem dados sens√≠veis)
*   **Explica√ß√£o:** (Detalhe como dados sens√≠veis podem ser expostos)
*   **Mitiga√ß√£o Sugerida:** (Sugira solu√ß√µes como criptografia em tr√¢nsito e em repouso, controle de acesso granular, tratamento de erros seguro, etc.)
*   **Referencias:** (Inclua links para documenta√ß√£o ou melhores pr√°ticas, se poss√≠vel)

### D - Denial of Service (Nega√ß√£o de Servi√ßo)
*   **Amea√ßa:** (Descreva a amea√ßa de nega√ß√£o de servi√ßo)
*   **Componentes Afetados:** (Identifique pontos √∫nicos de falha ou componentes expostos)
*   **Explica√ß√£o:** (Detalhe como um servi√ßo pode ser tornado indispon√≠vel)
*   **Mitiga√ß√£o Sugerida:** (Sugira solu√ß√µes como load balancers, auto-scaling, rate limiting, WAF, etc.)
*   **Referencias:** (Inclua links para documenta√ß√£o ou melhores pr√°ticas, se poss√≠vel)

### E - Elevation of Privilege (Eleva√ß√£o de Privil√©gio)
*   **Amea√ßa:** (Descreva a amea√ßa de eleva√ß√£o de privil√©gio)
*   **Componentes Afetados:** (Liste os componentes que gerenciam autoriza√ß√£o)
*   **Explica√ß√£o:** (Detalhe como um usu√°rio com poucos privil√©gios poderia obter mais acesso)
*   **Mitiga√ß√£o Sugerida:** (Sugira solu√ß√µes como o Princ√≠pio do Menor Privil√©gio, valida√ß√£o rigorosa de autoriza√ß√£o em cada endpoint, etc.)
*   **Referencias:** (Inclua links para documenta√ß√£o ou melhores pr√°ticas, se poss√≠vel)

Analise a imagem fornecida e gere o relat√≥rio.
"""

def analyze_architecture(image_data):
    """
    Analisa uma imagem de arquitetura de sistemas usando o Gemini
    e retorna um relat√≥rio de amea√ßas STRIDE.

    Argumentos:
        image_data: Um objeto de imagem aberto (como o retornado pelo st.file_uploader).
    """
    api_key = os.getenv("GEMINI_API_KEY")
    if not api_key:
        # Mostra um erro na pr√≥pria interface do Streamlit
        st.error("Chave da API do Gemini n√£o encontrada. Por favor, configure seu arquivo .env ou as secrets do Streamlit.")
        return None

    genai.configure(api_key=api_key)
    
    # Prepara a imagem e o modelo
    img = Image.open(image_data)
    model = genai.GenerativeModel('gemini-2.5-flash')

    try:
        # Gera o conte√∫do
        response = model.generate_content([PROMPT_TEMPLATE, img])
        return response.text
    except Exception as e:
        st.error(f"Ocorreu um erro ao chamar a API do Gemini: {e}")
        return None

# --- Interface do Streamlit ---

# Configura√ß√£o da p√°gina (t√≠tulo na aba do navegador e layout)
st.set_page_config(page_title="Arch-Sec-Analyst", layout="wide")

# T√≠tulo principal da aplica√ß√£o
st.title("ü§ñ Arch-Sec-Analyst com Gemini")

# Descri√ß√£o
st.write("Fa√ßa o upload de um diagrama de arquitetura de sistemas para receber uma an√°lise de amea√ßas automatizada usando a metodologia STRIDE.")

# Componente para upload de arquivo
uploaded_file = st.file_uploader(
    "Escolha a imagem da arquitetura...",
    type=["png", "jpg", "jpeg"]
)

# Verifica se um arquivo foi enviado
if uploaded_file is not None:
    # Mostra a imagem enviada
    st.image(uploaded_file, caption="Arquitetura Enviada", width=500)

    # Adiciona um bot√£o para iniciar a an√°lise
    if st.button("Analisar Arquitetura"):
        # Mostra uma mensagem de "carregando" enquanto a an√°lise ocorre
        with st.spinner("O Gemini est√° analisando a imagem... Por favor, aguarde. Isso pode levar alguns segundos."):
            report = analyze_architecture(uploaded_file)
            
            if report:
                st.divider() # Adiciona uma linha divis√≥ria
                st.subheader("Relat√≥rio de An√°lise de Amea√ßas - STRIDE")
                # st.markdown() renderiza o texto em formato Markdown, que √© o formato da nossa sa√≠da
                st.markdown(report)
